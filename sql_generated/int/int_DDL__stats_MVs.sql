-- generated by org.heigit.ohsome.now.statsservice.SqlGenerator at 2025-05-21T13:02:19.085350032Z


-- for hashtags endpoint
CREATE TABLE IF NOT EXISTS int.hashtag_aggregation_3
(
    `hashtag`           String,
    `count`             UInt64
)
    ENGINE = MergeTree
    PRIMARY KEY( count )
;

-- we have to refresh the whole table periodically
-- because the count is *not* an incremental operation
CREATE MATERIALIZED VIEW int.mv__all_stats_3_to_hashtag_aggregation_3
REFRESH EVERY 1 MINUTE
TO int.hashtag_aggregation_3
AS
SELECT
    arrayJoin(hashtags) AS hashtag,
    count(*) as count
FROM int.all_stats_3
GROUP BY hashtag
;    

-- USER MV --

CREATE TABLE IF NOT EXISTS int.all_stats_user_3
(
    `changeset_id`        Int64,
    `changeset_timestamp` DateTime('UTC'),

    `hashtags`            Array(String),

    `editor`              String,
    `user_id`             Int32,
    `osm_id`              String,
    `tags`                Map(String, String),
    `tags_before`         Map(String, String),

    -- areas
    `area`                Int64,
    `area_delta`          Int64,

    -- lengths
    `length`              Int64,
    `length_delta`        Int64,

    -- map feature stats
    `map_feature_edit`    Nullable(Int8), -- -1, 0, 1, NULL

    `has_hashtags`        Bool,
    `centroid`            Tuple(x Nullable(Float64), y Nullable(Float64)),
    `h3_r3`               Nullable(UInt64),
    `h3_r6`               Nullable(UInt64),
    `country_iso_a3`      Array(String),
    INDEX all_stats_user_3_skip_ht_ix hashtags TYPE set(0) GRANULARITY 1,
    INDEX all_stats_user_3_skip_cts_ix country_iso_a3 TYPE set(0) GRANULARITY 1
)
ENGINE = MergeTree
PRIMARY KEY (
    user_id,
    has_hashtags,
    toStartOfDay(changeset_timestamp)
)
ORDER BY (
    user_id,
    has_hashtags,
    toStartOfDay(changeset_timestamp),
    geohashEncode(coalesce(centroid.x, 0), coalesce(centroid.y, 0), 2),
    changeset_timestamp
)
;

CREATE MATERIALIZED VIEW int.mv__all_stats_3_to_all_stats_user_3
TO int.all_stats_user_3
AS
SELECT
    `changeset_id`,
    `changeset_timestamp`,
    `hashtags`,
    `editor`,
    `user_id`,
    `osm_id`,
    `tags`,
    `tags_before`,
    `area`,
    `area_delta`,
    `length`,
    `length_delta`,
    `map_feature_edit`,
    `has_hashtags`,
    `centroid`,
    `h3_r3`,
    `h3_r6`,
    `country_iso_a3`
FROM int.all_stats_3
WHERE
    changeset_timestamp > parseDateTimeBestEffort('2025-05-21T13:15:00Z')
;    