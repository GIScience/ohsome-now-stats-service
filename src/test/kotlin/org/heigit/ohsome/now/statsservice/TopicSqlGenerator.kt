package org.heigit.ohsome.now.statsservice

import org.heigit.ohsome.now.statsservice.topic.TopicDefinition
import org.heigit.ohsome.now.statsservice.topic.createMVDDL
import org.heigit.ohsome.now.statsservice.topic.createTableDDL
import org.heigit.ohsome.now.statsservice.topic.topics
import org.junit.jupiter.api.Test
import java.io.File
import java.time.Instant.now
import java.time.temporal.ChronoUnit.HOURS
import java.time.temporal.ChronoUnit.SECONDS


class TopicSqlGenerator {


    private val path = "sql_topics_generated/"


    @Test
    fun `create topic SQL for all topics`() {

        topics.values.forEach(::writeSql)

    }


    fun writeSql(definition: TopicDefinition) {


        val fourHoursLater = now()
            .plus(4, HOURS)
            .truncatedTo(SECONDS)
            .toString()


        val filename = "topic_" + definition.topicName + ".sql"
        val file = File(path + filename)

        println("fourHoursLater = $fourHoursLater")

        val comment = "-- generated by " + TopicSqlGenerator::class.qualifiedName + " at " + now().toString() + "\n\n\n"
        val table = createTableDDL(definition)
        val view = createMVDDL(definition, fourHoursLater)


        val text = comment + table  + "\n\n" + view

        file.writeText(text)

    }


}


